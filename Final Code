##Download genomes - I pulled the .fasta files from Google Drive to my scratch folder on Colossus via winSCP
#D.guttifera (specific genome assembly unknown)
Information is available at https://drive.google.com/drive/u/0/folders/1xZCsC0LrMf23jx_WDgeHgmbIJJVVqCWQ
#D.deflecta genome (Hb)
Information is available at https://drive.google.com/drive/u/0/folders/1GvHtrf0qZVVG4r9EivbIvIE48JfAofMa
Shareable link: https://drive.google.com/open?id=1DkNazQSf9Cet-vhmH4uUwFe2t2h1LOjG
#D.palustris genome
Information: https://drive.google.com/drive/u/0/folders/1zUG63DABQ6Yl0ZVOhiU9CtIo7QpqFiPv
Sharable link: https://drive.google.com/open?id=1LNpoHrGuq8AmkoLYVnoMcua5NRi6xtt2
#D.subpalustris genome
Information: https://drive.google.com/drive/u/0/folders/15trlJTnXkhiSiW9Z9t8tUBS-pOGPGJVi
Sharable link: https://drive.google.com/open?id=1ivhp9t3JE_vwScZrpknfDQhLC08YM5Aq

##BLAST the D.guttifera Spot, Stripe, and Wing-body cis-regulatory elements (CREs) against the genomes of D.deflecta, D.palustris, and D. subpalustris
#gut spot cre
Code for blast of def scaffolds against gut spot cre
 makeblastdb -in gut_spot_cre.fasta -dbtype nucl -title gut_spot
 blastn -db gut_spot_cre.fasta -query DefHb_final_scaffolds.fasta -out gut_def_spot.txt
   hit on scaffold46.1 *** ctrl+f "Score" ***
Code for blast of pal scaffolds against gut spot cre
 makeblastdb -in gut_spot_cre.fasta -dbtype nucl -title gut_spot
 blastn -db gut_spot_cre.fasta -query pal_2_asm.contigs.fasta -out gut_pal_spot.txt
   no hits on *** ctrl+f "Score" ***
Code for blast of sub scaffolds against gut spot cre
 makeblastdb -in gut_spot_cre.fasta -dbtype nucl
 blastn -db gut_spot_cre.fasta -query sub_1_asm.contigs.fasta -out gut_sub_spot.txt
   no hits on *** ctrl+f "Score" ***
Code to make sure that the blastn is working -- blast the gut spot cre against the gut genome to verify a match -- spot_confirm
 makeblastdb -in gut_spot_cre.fasta -dbtype nucl
 blastn -db gut_spot_cre.fasta -query GutG_final_scaffolds.fasta -out gut_gut_spot.txt
   96% identity at scaffold293.1 *** ctrl+f "Score" *** --- so we are good

#gut stripe cre
Code for blast of def scaffolds against gut stripe cre
 makeblastdb -in gut_stripe_cre.fasta -dbtype nucl
 blastn -db gut_stripe_cre.fasta -query DefHb_final_scaffolds.fasta -out gut_def_stripe.txt
  SEVERAL HITS *** ctrl+f "Score" ***
Code for blast of pal scaffolds against gut stripe cre
 makeblastdb -in gut_stripe_cre.fasta -dbtype nucl
 blastn -db gut_stripe_cre.fasta -query pal_2_asm.contigs.fasta -out gut_pal_stripe.txt
   SEVERAL HITS *** ctrl+f "Score" ***
Code for blast of sub scaffolds against gut stripe cre
 makeblastdb -in gut_stripe_cre.fasta -dbtype nucl
 blastn -db gut_stripe_cre.fasta -query sub_1_asm.contigs.fasta -out gut_sub_stripe.txt
   SEVERAL HITS *** ctrl+f "Score" ***
Code to make sure that the blastn is working -- blast the gut stripe cre against the gut genome to verify a match -- stripe_confirm
 makeblastdb -in gut_stripe_cre.fasta -dbtype nucl
 blastn -db gut_stripe_cre.fasta -query GutG_final_scaffolds.fasta -out gut_gut_stripe.txt
   LOTS of HITS *** ctrl+f "Score" ***

#gut wing-body cre
Code for blast of def scaffolds against gut wb cre
 makeblastdb -in gut_wb_cre.fasta -dbtype nucl
 blastn -db gut_wb_cre.fasta -query DefHb_final_scaffolds.fasta -out gut_def_wb.txt
   Few hits *** ctrl+f "Score" ***
Code for blast of pal scaffolds against gut wb cre
 makeblastdb -in gut_wb_cre.fasta -dbtype nucl
 blastn -db gut_wb_cre.fasta -query pal_2_asm.contigs.fasta -out gut_pal_wb.txt
   ONE HIT FOUND *** ctrl+f "Score" ***
Code for blast of sub scaffolds against gut wb cre
 makeblastdb -in gut_wb_cre.fasta -dbtype nucl
 blastn -db gut_wb_cre.fasta -query sub_1_asm.contigs.fasta -out gut_sub_wb.txt
   no hits *** ctrl+f "Score" ***
Code to make sure that the blastn is working -- blast the gut wb cre against the gut genome to verify a match -- wb_confirm
 makeblastdb -in gut_wb_cre.fasta -dbtype nucl
 blastn -db gut_wb_cre.fasta -query GutG_final_scaffolds.fasta -out gut_gut_wb.txt
   ONE HIT FOUND*** ctrl+f "Score" ***

##Code to pull out scaffold or contig to get sequence for GenePalette alignment (see "Gene Palette Data" folder for constructed files
#Sample selection for D.pal contig 673
  pull out contig pal_00000673
   grep -A1970 ">tig00000673" pal_2_asm.contigs.fasta > pal_tig00000673
  check to make sure I didn't pull out the next contig too
   tail pal_tig00000673
#Other checks for yellow alignment - Note that all alignments for D.deflecta were done on the local BLAST station, not on Colossus
 grep -A1260 ">tig00001002" pal_2_asm.contigs.fasta > pal_tig00001002
 grep -A1607 ">tig00001098" pal_2_asm.contigs.fasta > pal_tig00001098
 grep -A1065 ">tig00001339" pal_2_asm.contigs.fasta > pal_tig00001339
 grep -A124 ">tig00004355" pal_2_asm.contigs.fasta > pal_tig00004355
 grep -A466 ">tig00008089" pal_2_asm.contigs.fasta > pal_tig00008089
 grep -A86 ">tig00008137" pal_2_asm.contigs.fasta > pal_tig00008137
 grep -A801 ">tig00073903" pal_2_asm.contigs.fasta > pal_tig00073903
 grep -A878 ">tig00001607" pal_2_asm.contigs.fasta > pal_tig0001607
 grep -A1700 ">tig00000086" sub_1_asm.contigs.fasta > sub_tig00000086
 grep -A546 ">tig00000324" sub_1_asm.contigs.fasta > sub_tig00000324
 grep -A556 ">tig00000749" sub_1_asm.contigs.fasta > sub_tig00000749
 grep -A361 ">tig00001663" sub_1_asm.contigs.fasta > sub_tig00001663
 grep -A165 ">tig00002127" sub_1_asm.contigs.fasta > sub_tig00002127
 grep -A453 ">tig00002621" sub_1_asm.contigs.fasta > sub_tig00002621
 grep -A277 ">tig00004669" sub_1_asm.contigs.fasta > sub_tig00004669
 grep -A149 ">tig00004773" sub_1_asm.contigs.fasta > sub_tig00004773
 grep -A546 ">tig00012730" sub_1_asm.contigs.fasta > sub_tig00012730
 grep -A151 ">tig00012751" sub_1_asm.contigs.fasta > sub_tig00012751
 grep -A377 ">tig00012769" sub_1_asm.contigs.fasta > sub_tig00012769
 grep -A326 ">tig00013149" sub_1_asm.contigs.fasta > sub_tig00013149
 grep -A94 ">tig00013414" sub_1_asm.contigs.fasta > sub_tig00013414 
 
##RStudio code to generate mosaic plots
#note that this data is available in this repository as "data.csv"
#Download the Topic of Choice repository from Github and move the folder to the H: Drive
data <- read.csv("H:/Topic-of-choice-master/data.csv", sep = ',', header = T)
   summary(data)
"BLAST Hits for cis-regualtory elements" <- table(data$Species, data$gut_CRE_BLASTed_against)
 `BLAST Hits for cis-regualtory elements`
   mosaicplot(`BLAST Hits for cis-regualtory elements`)
"Percent identities for BLAST hits" <-table(data$Species, data$X.Identity)
 `Percent identities for BLAST hits`
   mosaicplot(`Percent identities for BLAST hits`)
"Lengths for BLAST hits" <-table(data$Species, data$Length)
 `Lengths for BLAST hits`
  mosaicplot(`Lengths for BLAST hits`)


